"use strict";
self["webpackHotUpdatenode_template"]("main",{

/***/ "./app/components/Canvas/index.js":
/*!****************************************!*\
  !*** ./app/components/Canvas/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var ogl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ogl */ "./node_modules/ogl/src/core/Renderer.js");
/* harmony import */ var ogl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ogl */ "./node_modules/ogl/src/core/Camera.js");
/* harmony import */ var ogl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ogl */ "./node_modules/ogl/src/core/Transform.js");
/* harmony import */ var _Home__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Home */ "./app/components/Canvas/Home/index.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (class {
  constructor({
    url
  }) {
    this.url = url;
    this.renderer = new ogl__WEBPACK_IMPORTED_MODULE_1__.Renderer({
      alpha: true,
      antialias: true,
      dpr: Math.min(window.devicePixelRatio, 2)
    });
    this.gl = this.renderer.gl;
    this.gl.clearColor(0, 0, 0, 0);
    document.body.appendChild(this.gl.canvas);
    this.createCamera();
    this.createScene();
    this.createGeometries();
    this.onResize();
  }
  createCamera() {
    this.camera = new ogl__WEBPACK_IMPORTED_MODULE_2__.Camera(this.gl);
    this.camera.fov = 45;
    this.camera.position.z = 5;
  }
  createScene() {
    this.scene = new ogl__WEBPACK_IMPORTED_MODULE_3__.Transform();
  }
  createHome() {
    this.home = new _Home__WEBPACK_IMPORTED_MODULE_0__["default"]({
      gl: this.gl,
      scene: this.scene,
      sizes: this.viewport
    });
  }
  onPreloaded() {
    this.onChangeEnd(this.template);
  }

  /**
   * Change.
   */
  onChange(url) {}

  /**
   * Resize.
   */
  onResize() {
    this.screen = {
      height: window.innerHeight,
      width: window.innerWidth
    };
    this.renderer.setSize(this.screen.width, this.screen.height);
    this.camera.perspective({
      aspect: this.gl.canvas.width / this.gl.canvas.height
    });
    const fov = this.camera.fov * (Math.PI / 180);
    const height = 2 * Math.tan(fov / 2) * this.camera.position.z;
    const width = height * this.camera.aspect;
    this.viewport = {
      height,
      width
    };
    const values = {
      screen: this.screen,
      viewport: this.viewport
    };
  }
  onTouchDown(event) {
    this.isDown = true;
    this.x.start = event.touches ? event.touches[0].clientX : event.clientX;
    this.y.start = event.touches ? event.touches[0].clientY : event.clientY;
    const values = {
      x: this.x.start,
      y: this.y.start
    };
    if (this.home) {
      this.home.onTouchDown(values);
    }
  }
  onTouchMove(event) {
    if (!this.isDown) return;
    const x = event.touches ? event.touches[0].clientX : event.clientX;
    const y = event.touches ? event.touches[0].clientY : event.clientY;
    this.x.end = x;
    this.y.end = y;
    const values = {
      x: this.x,
      y: this.y
    };
    if (this.home) {
      this.home.onTouchMove(values);
    }
  }
  onTouchUp(event) {
    this.isDown = false;
    const x = event.changedTouches ? event.changedTouches[0].clientX : event.clientX;
    const y = event.changedTouches ? event.changedTouches[0].clientY : event.clientY;
    this.x.end = x;
    this.y.end = y;
    const values = {
      x: this.x,
      y: this.y
    };
    if (this.home) {
      this.home.onTouchUp(values);
    }
  }

  /**
   * Update.
   */
  update(application) {
    if (!application) return;
    if (this.home) {
      this.home.update();
    }
    this.renderer.render({
      scene: this.scene,
      camera: this.camera
    });
  }
});

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("98fdd8c81a7ebdcd492e")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q1YsQ0FBQztJQUVELElBQUksSUFBSSxDQUFDekIsSUFBSSxFQUFFO01BQ2IsSUFBSSxDQUFDQSxJQUFJLENBQUM2QixTQUFTLENBQUNaLE1BQU0sQ0FBQztJQUM3QjtFQUNGOztFQUVBO0FBQ0Y7QUFDQTtFQUNFYyxNQUFNQSxDQUFDQyxXQUFXLEVBQUU7SUFDbEIsSUFBSSxDQUFDQSxXQUFXLEVBQUU7SUFFbEIsSUFBSSxJQUFJLENBQUNoQyxJQUFJLEVBQUU7TUFDYixJQUFJLENBQUNBLElBQUksQ0FBQytCLE1BQU0sQ0FBQyxDQUFDO0lBQ3BCO0lBRUEsSUFBSSxDQUFDdkQsUUFBUSxDQUFDeUQsTUFBTSxDQUFDO01BQ25CbkMsS0FBSyxFQUFFLElBQUksQ0FBQ0EsS0FBSztNQUNqQkosTUFBTSxFQUFFLElBQUksQ0FBQ0E7SUFDZixDQUFDLENBQUM7RUFDSjtBQUNGOzs7Ozs7OztVQ25KQSIsInNvdXJjZXMiOlsid2VicGFjazovL25vZGUtdGVtcGxhdGUvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbm9kZS10ZW1wbGF0ZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm94LCBDYW1lcmEsIFBsYW5lLCBSZW5kZXJlciwgVHJhbnNmb3JtIH0gZnJvbSBcIm9nbFwiXG5pbXBvcnQgSG9tZSBmcm9tIFwiLi9Ib21lXCJcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcih7IHVybCB9KSB7XG4gICAgdGhpcy51cmwgPSB1cmxcblxuICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgUmVuZGVyZXIoe1xuICAgICAgYWxwaGE6IHRydWUsXG4gICAgICBhbnRpYWxpYXM6IHRydWUsXG4gICAgICBkcHI6IE1hdGgubWluKHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvLCAyKVxuICAgIH0pXG5cbiAgICB0aGlzLmdsID0gdGhpcy5yZW5kZXJlci5nbFxuICAgIHRoaXMuZ2wuY2xlYXJDb2xvcigwLCAwLCAwLCAwKVxuXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmdsLmNhbnZhcylcblxuICAgIHRoaXMuY3JlYXRlQ2FtZXJhKClcbiAgICB0aGlzLmNyZWF0ZVNjZW5lKClcbiAgICB0aGlzLmNyZWF0ZUdlb21ldHJpZXMoKVxuXG4gICAgdGhpcy5vblJlc2l6ZSgpXG4gIH1cblxuICBjcmVhdGVDYW1lcmEoKSB7XG4gICAgdGhpcy5jYW1lcmEgPSBuZXcgQ2FtZXJhKHRoaXMuZ2wpXG4gICAgdGhpcy5jYW1lcmEuZm92ID0gNDVcbiAgICB0aGlzLmNhbWVyYS5wb3NpdGlvbi56ID0gNVxuICB9XG5cbiAgY3JlYXRlU2NlbmUoKSB7XG4gICAgdGhpcy5zY2VuZSA9IG5ldyBUcmFuc2Zvcm0oKVxuICB9XG5cbiAgY3JlYXRlSG9tZSgpIHtcbiAgICB0aGlzLmhvbWUgPSBuZXcgSG9tZSh7IGdsOiB0aGlzLmdsLCBzY2VuZTogdGhpcy5zY2VuZSwgc2l6ZXM6IHRoaXMudmlld3BvcnQgfSlcbiAgfVxuXG4gIG9uUHJlbG9hZGVkKCkge1xuICAgIHRoaXMub25DaGFuZ2VFbmQodGhpcy50ZW1wbGF0ZSlcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGFuZ2UuXG4gICAqL1xuICBvbkNoYW5nZSh1cmwpIHt9XG5cbiAgLyoqXG4gICAqIFJlc2l6ZS5cbiAgICovXG4gIG9uUmVzaXplKCkge1xuICAgIHRoaXMuc2NyZWVuID0ge1xuICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGhcbiAgICB9XG5cbiAgICB0aGlzLnJlbmRlcmVyLnNldFNpemUodGhpcy5zY3JlZW4ud2lkdGgsIHRoaXMuc2NyZWVuLmhlaWdodClcblxuICAgIHRoaXMuY2FtZXJhLnBlcnNwZWN0aXZlKHtcbiAgICAgIGFzcGVjdDogdGhpcy5nbC5jYW52YXMud2lkdGggLyB0aGlzLmdsLmNhbnZhcy5oZWlnaHRcbiAgICB9KVxuXG4gICAgY29uc3QgZm92ID0gdGhpcy5jYW1lcmEuZm92ICogKE1hdGguUEkgLyAxODApXG4gICAgY29uc3QgaGVpZ2h0ID0gMiAqIE1hdGgudGFuKGZvdiAvIDIpICogdGhpcy5jYW1lcmEucG9zaXRpb24uelxuICAgIGNvbnN0IHdpZHRoID0gaGVpZ2h0ICogdGhpcy5jYW1lcmEuYXNwZWN0XG5cbiAgICB0aGlzLnZpZXdwb3J0ID0ge1xuICAgICAgaGVpZ2h0LFxuICAgICAgd2lkdGhcbiAgICB9XG5cbiAgICBjb25zdCB2YWx1ZXMgPSB7XG4gICAgICBzY3JlZW46IHRoaXMuc2NyZWVuLFxuICAgICAgdmlld3BvcnQ6IHRoaXMudmlld3BvcnRcbiAgICB9XG4gIH1cblxuICBvblRvdWNoRG93bihldmVudCkge1xuICAgIHRoaXMuaXNEb3duID0gdHJ1ZVxuXG4gICAgdGhpcy54LnN0YXJ0ID0gZXZlbnQudG91Y2hlcyA/IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WCA6IGV2ZW50LmNsaWVudFhcbiAgICB0aGlzLnkuc3RhcnQgPSBldmVudC50b3VjaGVzID8gZXZlbnQudG91Y2hlc1swXS5jbGllbnRZIDogZXZlbnQuY2xpZW50WVxuXG4gICAgY29uc3QgdmFsdWVzID0ge1xuICAgICAgeDogdGhpcy54LnN0YXJ0LFxuICAgICAgeTogdGhpcy55LnN0YXJ0XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaG9tZSkge1xuICAgICAgdGhpcy5ob21lLm9uVG91Y2hEb3duKHZhbHVlcylcbiAgICB9XG4gIH1cblxuICBvblRvdWNoTW92ZShldmVudCkge1xuICAgIGlmICghdGhpcy5pc0Rvd24pIHJldHVyblxuXG4gICAgY29uc3QgeCA9IGV2ZW50LnRvdWNoZXMgPyBldmVudC50b3VjaGVzWzBdLmNsaWVudFggOiBldmVudC5jbGllbnRYXG4gICAgY29uc3QgeSA9IGV2ZW50LnRvdWNoZXMgPyBldmVudC50b3VjaGVzWzBdLmNsaWVudFkgOiBldmVudC5jbGllbnRZXG5cbiAgICB0aGlzLnguZW5kID0geFxuICAgIHRoaXMueS5lbmQgPSB5XG5cbiAgICBjb25zdCB2YWx1ZXMgPSB7XG4gICAgICB4OiB0aGlzLngsXG4gICAgICB5OiB0aGlzLnlcbiAgICB9XG5cbiAgICBpZiAodGhpcy5ob21lKSB7XG4gICAgICB0aGlzLmhvbWUub25Ub3VjaE1vdmUodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIG9uVG91Y2hVcChldmVudCkge1xuICAgIHRoaXMuaXNEb3duID0gZmFsc2VcblxuICAgIGNvbnN0IHggPSBldmVudC5jaGFuZ2VkVG91Y2hlcyA/IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFggOiBldmVudC5jbGllbnRYXG4gICAgY29uc3QgeSA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzID8gZXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WSA6IGV2ZW50LmNsaWVudFlcblxuICAgIHRoaXMueC5lbmQgPSB4XG4gICAgdGhpcy55LmVuZCA9IHlcblxuICAgIGNvbnN0IHZhbHVlcyA9IHtcbiAgICAgIHg6IHRoaXMueCxcbiAgICAgIHk6IHRoaXMueVxuICAgIH1cblxuICAgIGlmICh0aGlzLmhvbWUpIHtcbiAgICAgIHRoaXMuaG9tZS5vblRvdWNoVXAodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUuXG4gICAqL1xuICB1cGRhdGUoYXBwbGljYXRpb24pIHtcbiAgICBpZiAoIWFwcGxpY2F0aW9uKSByZXR1cm5cblxuICAgIGlmICh0aGlzLmhvbWUpIHtcbiAgICAgIHRoaXMuaG9tZS51cGRhdGUoKVxuICAgIH1cblxuICAgIHRoaXMucmVuZGVyZXIucmVuZGVyKHtcbiAgICAgIHNjZW5lOiB0aGlzLnNjZW5lLFxuICAgICAgY2FtZXJhOiB0aGlzLmNhbWVyYVxuICAgIH0pXG4gIH1cbn1cbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjk4ZmRkOGM4MWE3ZWJkY2Q0OTJlXCIpIl0sIm5hbWVzIjpbIkJveCIsIkNhbWVyYSIsIlBsYW5lIiwiUmVuZGVyZXIiLCJUcmFuc2Zvcm0iLCJIb21lIiwiY29uc3RydWN0b3IiLCJ1cmwiLCJyZW5kZXJlciIsImFscGhhIiwiYW50aWFsaWFzIiwiZHByIiwiTWF0aCIsIm1pbiIsIndpbmRvdyIsImRldmljZVBpeGVsUmF0aW8iLCJnbCIsImNsZWFyQ29sb3IiLCJkb2N1bWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNhbnZhcyIsImNyZWF0ZUNhbWVyYSIsImNyZWF0ZVNjZW5lIiwiY3JlYXRlR2VvbWV0cmllcyIsIm9uUmVzaXplIiwiY2FtZXJhIiwiZm92IiwicG9zaXRpb24iLCJ6Iiwic2NlbmUiLCJjcmVhdGVIb21lIiwiaG9tZSIsInNpemVzIiwidmlld3BvcnQiLCJvblByZWxvYWRlZCIsIm9uQ2hhbmdlRW5kIiwidGVtcGxhdGUiLCJvbkNoYW5nZSIsInNjcmVlbiIsImhlaWdodCIsImlubmVySGVpZ2h0Iiwid2lkdGgiLCJpbm5lcldpZHRoIiwic2V0U2l6ZSIsInBlcnNwZWN0aXZlIiwiYXNwZWN0IiwiUEkiLCJ0YW4iLCJ2YWx1ZXMiLCJvblRvdWNoRG93biIsImV2ZW50IiwiaXNEb3duIiwieCIsInN0YXJ0IiwidG91Y2hlcyIsImNsaWVudFgiLCJ5IiwiY2xpZW50WSIsIm9uVG91Y2hNb3ZlIiwiZW5kIiwib25Ub3VjaFVwIiwiY2hhbmdlZFRvdWNoZXMiLCJ1cGRhdGUiLCJhcHBsaWNhdGlvbiIsInJlbmRlciJdLCJzb3VyY2VSb290IjoiIn0=